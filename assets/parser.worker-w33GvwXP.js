(function(){"use strict";function f(o){const c=o.split(`
`),l=[];let t=null,i=!1;const a=new Map;for(const s of c){const r=s.match(/^(\S+)\s+(\d+)\s+\[(\d+)\]\s+([\d.]+):/);if(r){i=!0,t&&l.push(t);const e=r[1],n=parseInt(r[2]),m=parseInt(r[3]),h=a.get(m)||0,d=n-h;a.set(m,n),t={stack:[],time:parseFloat(r[4]),process:e,cpuCost:Math.max(0,d)}}else if(t&&s.trim()){const e=s.trim().split(" ")[1];if(e){let n=e.split("+")[0];n.startsWith("L")&&(n=n.substring(1).replace(/;/g,".")),t.stack.unshift(n)}}}if(t&&l.push(t),!i)throw new Error("Invalid file format: No sample headers found. Perf script output should contain lines with timestamps (e.g., 'command 1234 123.456:').");if(l.length===0)throw new Error("No complete samples could be parsed. Check that the file is not empty or truncated.");return l}function u(o){const c={name:"root",value:0,children:[],samples:[]};o.length>0&&(c.startTime=o[0].time,c.endTime=o[o.length-1].time);for(const t of o){let i=c;for(let a=0;a<t.stack.length;a++){let s=t.stack[a],r=t.process;if(s==="[unknown]"){let n=1;for(;a+1<t.stack.length&&t.stack[a+1]==="[unknown]";)n++,a++;n>1?s=`${n} x [unknown] (${r})`:s=`[unknown] (${r})`}let e=i.children.find(n=>n.name===s);e?(e.startTime&&e.startTime>t.time&&(e.startTime=t.time),e.endTime&&e.endTime<t.time&&(e.endTime=t.time)):(e={name:s,value:0,children:[],process:r,startTime:t.time,endTime:t.time,samples:[]},i.children.push(e)),a===t.stack.length-1&&(e.value++,e.samples=e.samples||[],e.samples.push({time:t.time,cpuCost:t.cpuCost})),i=e}}function l(t){if(t.children.length>0){t.value=0;let i=1/0,a=-1/0;for(const s of t.children)l(s),s.startTime&&s.startTime<i&&(i=s.startTime),s.endTime&&s.endTime>a&&(a=s.endTime);t.startTime=i,t.endTime=a}}return l(c),c.value=0,c}function p(o){if(o.length===0)return{data:[],maxTime:0,maxCount:0};const c=o[0].time,l=o[o.length-1].time-c,t=Math.ceil(l),i=Array.from({length:t},()=>Array(10).fill(0));let a=0;for(const r of o){const e=r.time-c,n=Math.floor(e),m=Math.floor((e-n)*10);n<t&&m<10&&(i[n][m]++,i[n][m]>a&&(a=i[n][m]))}const s=[];for(let r=0;r<t;r++)for(let e=0;e<10;e++)i[r][e]>0&&s.push({second:r,interval:e,count:i[r][e]});return{data:s,maxTime:t,maxCount:a,firstTime:c}}self.onmessage=o=>{const{fileContent:c}=o.data;try{const l=f(c),t=u(l),i=p(l);self.postMessage({status:"success",flamegraphData:t,heatmapData:i})}catch(l){console.error("Error parsing perf script:",l),self.postMessage({status:"error",message:l.message})}}})();
